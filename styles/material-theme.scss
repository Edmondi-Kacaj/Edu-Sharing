@import "variables";
@import '~@angular/material/theming';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$custom-typography: mat-typography-config(
        $font-family: 'open_sansregular',
        $body-1: mat-typography-level(100%, normal, 400),
        $body-2: mat-typography-level(100%, normal, 600),
        $button: mat-typography-level(100%, normal, 400),
        $headline: mat-typography-level(150%, normal, 400),
        $title: mat-typography-level(130%, normal, 400),
        $input: mat-typography-level(inherit, 1.25, 400)
);
// Override typography for all Angular Material, including mat-base-typography and all components.
@include angular-material-typography($custom-typography);
$mat-custom: (
        50: lighten($primary,50%),
        100: lighten($primary,40%),
        200: lighten($primary,30%),
        300: lighten($primary,20%),
        400: lighten($primary,10%),
        500: $primary,
        600: darken($primary,10%),
        700: darken($primary,20%),
        800: darken($primary,30%),
        900: darken($primary,40%),
        A100: lighten($primary,40%),
        A200: lighten($primary,30%),
        A400: $primary,
        A700: darken($primary,20%),
        contrast: (
                50: $textOnPrimaryLight,
                100: $textOnPrimaryLight,
                200: $textOnPrimaryLight,
                300: $textOnPrimaryLight,
                400: $textOnPrimary,
                500: $textOnPrimary,
                600: $textOnPrimary,
                700: $textOnPrimary,
                800: $textOnPrimary,
                900: $textOnPrimary,
                A100: $textOnPrimaryLight,
                A200: $textOnPrimaryLight,
                A400: $textOnPrimary,
                A700: $textOnPrimary,
        )
);

$candy-app-primary: mat-palette($mat-custom);
$candy-app-accent:  mat-palette($mat-custom);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

/** custom project specifics */
[matripplecolor=primary] {
  > .mat-ripple-element {
    background-color: $primary;
    opacity: $mat-ripple-color-opacity;
  }
}
.mat-tooltip{
  background-color: $primaryLight;
  color: $textMain !important;
  font-weight: bold;
}
.mat-radio-multiline{
  .mat-radio-label,.mat-checkbox-layout{
    white-space: normal!important;
    align-items: baseline !important;
  }
  .mat-radio-container{
    position: relative;
    top:6px;
  }
}
.mat-tab-labels {
  background-color: $actionDialogBackground;
  .mat-tab-label {
    text-transform: uppercase;
  }
}
.mat-tab-group.mat-dark{
  .mat-tab-labels {
    background-color: $workspaceTopBarBackground;
    .mat-tab-label {
      color: $textOnPrimary;
    }
  }
  .mat-ink-bar{
    background-color: $primaryLight;
  }
}
// a mat table with clickable columns
.mat-table-clickable{
  .mat-row{
    @include clickable();
    transition: all $transitionNormal;
    &:hover{
      background-color: $itemSelectedBackground;
    }
  }
}
.mat-fab.mat-white,
.mat-mini-fab.mat-white{
  // white background, primary as content color
  color: $primary;
}
// align prefix in input fields
.mat-form-field-appearance-outline .mat-form-field-prefix {
  top: 0.4em !important;
  left: -0.1em;
}
// align subscript/bottom hint to complete left/right
.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{
  padding: 0 !important;
}
.mat-form-field.mat-form-field-no-padding{
      .mat-form-field-wrapper {
        padding-bottom: 0;
      }
}
// form border on hover
.mat-form-field-appearance-outline .mat-form-field-outline-thick{
  color:$primaryMediumLight;
}
.mat-form-field-bright{
  input,textarea {
    caret-color: $primaryLight;
  }
  .mat-form-field-outline,
  .mat-form-field-label{
    color: rgba(255,255,255,0.5);
  }
  &.mat-focused{
    .mat-form-field-outline,
    .mat-form-field-label{
      color: rgba(255,255,255,0.7);
    }
  }
}
  // will fix g and y to cut off with custom font
input.mat-input-element, mat-label, .mat-select-value{
  line-height: normal;
}
// will better align the border label for the outlined input
.mat-form-field-appearance-outline .mat-form-field-label{
  margin-top: -6px;
}
.mat-autocomplete-high{
  max-height: 350px;
}
.mat-checkbox-inner-container{
  width:18px !important;
  height:18px !important;
  margin: 2px 18px auto 0 !important;
  .mat-checkbox-frame {
    border-color: $primary;
    background-color: #fff;
  }
}
.mat-radio-container {
  .mat-radio-outer-circle {
    border-color: $primary;
  }
}
.mat-checkbox-label {
  line-height: 17pt !important;
  font-size: 1rem;
  color: $textMain;
}
.mat-flat-button,.mat-raised-button{
  min-height: 36px;
}
.mat-raised-button{
  color: $primary;
}
.mat-button.mat-cancel{
  color: $textMediumLight;
  &:hover{
    color: $primary;
  }
}
.mat-button-wrapper{
  position: relative;
  display: flex !important;
  align-items: center;
  justify-content: center;
  text-transform: uppercase;
  > i {
    width: 35px;
  }
}
.mat-button-no-uppercase .mat-button-wrapper{
  text-transform: none;
}
.mat-menu-content{
  min-width: 200px;
  >button{
    color:$primary;
    display: flex;
    align-items: center;
    > i {
      width: 35px;
    }
  }
  &:not(:empty){
    padding: 0!important;
  }
}
.mat-button-focus-overlay{
  background: $primary;
}
.mat-menu-item{
  &:hover:not([disabled]){
    background: $itemSelectedBackground !important;
  }
}
.mat-menu-item-seperate {
  border-top:1px solid #ccc!important;
}
.mat-menu-item-seperate-bottom {
  border-bottom:1px solid #ccc!important;
}
.mat-calendar-table-header-divider{
  display: none;
}
.mat-chip{
  .edu-icon-base{
    font-size: 1.45rem;
  }
}
.mat-option {
  font-size: 100%;
  .mat-option-primary {
    line-height: initial;
    font-size: 90%;
  }

  .mat-option-secondary {
    font-size: 75%;
    line-height: initial;
    color: $textLight;
  }
}

label .label-secondary{
  font-size: 90%;
  color: $textLight;
}
/* a badge (usually counter) inside an (icon) button
 */
.mat-button-badge{
  position: absolute;
  right: -3px;
  top: -3px;
  color: $textOnPrimary;
  background-color: $colorStatusNegative;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  font-weight: bold;
  font-size: 0.8em;
  display: flex;
  justify-content: center;
  align-items: center;
}
.monaco-editor{
  background-color: transparent!important;
  mat-label,mat-hint{
    padding:2px 0;
    font-size: 75%;
    color: $textLight;
  }
}
.mat-card-subtitle,.mat-hint, .mat-slide-toggle-content{
  color: $textLight;
}
// prevent umlauts from cutting off
.mat-hint,.mat-error{
  line-height: 1.5;
}

// Show toggle on the right place
.toggle-reverse{
  .mat-slide-toggle-label {
    flex-direction: row-reverse;
  }
  .mat-slide-toggle-content {
    margin-right: 18px;
  }
}
.mat-slide-toggle-twoside{
  display: flex;
  align-items: center;
  >mat-label{
    color:$textLight;
    padding:0 8px;
  }
}
// Mobile Menus at bottom
@media screen and (max-width:  ($mobileWidth - $mobileStage*1)) {
  .cdk-overlay-backdrop.mat-dropdown-menu{
    background: rgba(0, 0, 0, 0.8);
  }
  .mat-menu-panel.mat-dropdown-menu{
    position: fixed;
    bottom:0;
    left:0;
    max-width: 100%;
    width: 100%;
    border-radius: 0;
  }
}
