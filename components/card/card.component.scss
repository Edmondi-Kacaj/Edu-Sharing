@import "../../styles/variables";
@import "variables";


@mixin content{
  overflow-y: auto;
  @include iosScrolling();
  background-color: #fff;
}
:host /deep/ .card-dialog{
  display: flex;
  z-index: $dialogZIndex+1;
  align-items: center;
  justify-content: center;
  .mat-card {
    max-width: 100%;
    position: relative;
    padding: 0;
    @include materialShadowLarge();
    .mat-card-header {
      background-color: $actionDialogBackground;
      display: flex;
      align-items: center;
      height: $titleHeight;
      padding-top: 15px;
      position: relative;
      .cancel {
        position: absolute;
        right: 0;
        top: 0;
        padding:2px;
        background: linear-gradient(to right,rgba(red($actionDialogBackground),green($actionDialogBackground),blue($actionDialogBackground),0.0001) 0,$actionDialogBackground 15px);
        >button {
          border-radius: 50%;
          height: 66px;
        }
      }
      .avatar {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 20px;
        margin-top: -10px;
        background-color: #fff;
        > img {
          width: 24px;
          height: 24px;
        }
        >  i {
          color: $textLight;
        }
      }
      .mat-card-title, .mat-card-subtitle{
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
      .mat-card-title{
        color: $textMain;
      }
    }
    background-color: $backgroundColor;
    border-radius: 2px;
    mat-card-actions {
      $height: $actionMenuHeight;
      background-color: #fff;
      border-top:1px solid $cardSeperatorLineColor;
      display: flex;
      height: $actionMenuHeight;
      justify-content: flex-end;
      margin: 0;
      padding: 17px 20px;
      button {
        margin: 0 5px;
        padding: 0 2rem;
      }
    }
    mat-card-content {
      margin: 0;
      position: relative;
    }
    &.width-xsmall {
      width: 400px;
    }
    &.width-small {
      width: 500px;
    }
    &.width-normal {
      width: 600px;
    }
    &.width-mlarge {
      width: 650px;
    }
    &.width-large {
      width: 700px;
    }
    &.width-xlarge {
      width: 800px;
    }
    &.width-xxlarge {
      width: 900px;
    }
    &:not(.card-tabbed) {
      mat-card-content {
        max-height: calc(100vh - #{$titleHeight} - #{$actionMenuHeight});
        @include content();
      }
      &.height-small mat-card-content {
        height: $height-small - $titleHeight - $actionMenuHeight;
      }
      &.height-normal mat-card-content {
        height: $height-normal - $titleHeight - $actionMenuHeight;
      }
      &.height-large mat-card-content {
        height: $height-large - $titleHeight - $actionMenuHeight;
      }
      &.height-xlarge mat-card-content {
        height: $height-xlarge - $titleHeight - $actionMenuHeight;
      }
      &.height-xxlarge mat-card-content {
        height: $height-xxlarge - $titleHeight - $actionMenuHeight;
      }
      &.height-auto mat-card-content {
        height: auto;
      }
    }
    &.card-no-buttons {
      mat-card-content {
        max-height: 100vh;
        @include content();
      }
      .card-content-header{
        max-height: calc(100vh - #{$titleHeight});
      }
      &.height-small mat-card-content {
        height: $height-small - $titleHeight;
      }
      &.height-normal mat-card-content {
        height: $height-normal - $titleHeight;
      }
      &.height-large mat-card-content {
        height: $height-large - $titleHeight;
      }
      &.height-xlarge mat-card-content {
        height: $height-xlarge - $titleHeight;
      }
      &.height-xxlarge mat-card-content {
        height: $height-xxlarge - $titleHeight;
      }
      &.height-auto mat-card-content {
        height: auto;
      }
    }
    &.card-tabbed {
      .mat-tab-body-wrapper {
        max-height: calc(100vh - #{$titleHeight} - #{$actionMenuHeight} - #{$tabHeight});
        @include content();
      }
      &.height-small .mat-tab-body-wrapper {
        height: $height-small - $titleHeight - $actionMenuHeight - $tabHeight;
      }
      &.height-normal .mat-tab-body-wrapper {
        height: $height-normal - $titleHeight - $actionMenuHeight - $tabHeight;
      }
      &.height-large .mat-tab-body-wrapper {
        height: $height-large - $titleHeight - $actionMenuHeight - $tabHeight;
      }
      &.height-xlarge .mat-tab-body-wrapper {
        height: $height-xlarge - $titleHeight - $actionMenuHeight - $tabHeight;
      }
      &.height-xxlarge .mat-tab-body-wrapper {
        height: $height-xxlarge - $titleHeight - $actionMenuHeight - $tabHeight;
      }
    }
    /*
      move a non-modal card downwards to center it below the main-nav
     */
    &:not(.card-modal){
      margin-top: $mainnavHeight;
      .card-content-header{
        max-height: calc(100vh - #{$titleHeight} - #{$actionMenuHeight} - #{$mainnavHeight} - #{$nonModalPadding});
      }
      &.card-no-buttons .card-content-header{
        max-height: calc(100vh - #{$titleHeight} - #{$mainnavHeight} - #{$nonModalPadding});
      }
    }
    .card-content-padding{
      padding: $cardPadding;
    }
  }
  .card-jumpmarks {
    margin-left: $jumpmarksWidth;
    .jumpmarks {
      position: absolute;
      z-index: $dialogZIndex+2;
      top: 0;
      left: -$jumpmarksWidth - 5px;
      width: $jumpmarksWidth;
      background-color: $workspaceTreeBackground;
      border-radius: 3pt;
      padding: 10px 0;
      button {
        border-radius: 0;
        margin: 0;
        padding: 5px;
        width: 100%;
        transition: all $transitionNormal;
        .mat-button-wrapper{
          justify-content: flex-start;
        }
      }
      button.active {
        background: $workspaceTreeSelectedBackgroundEffect;
        background-color: $workspaceTreeSelectedBackground;
      }
    }
  }
  // @TODO: using position fixed is may not the best way since it can fail for different combinations
  // however, it's currently just used for non-modal dialogs which are relatively rare

  @media screen and (max-width: $mobileTabSwitchWidth){
    .mat-card:not(.card-modal){
      margin-top: 0;
      /*position: fixed;
      top: $mainnavHeight;
      bottom: $mainnavHeight + $mobileTabNavHeight;
      */
      &:not(.card-tabbed) {
        mat-card-content {
          max-height: calc(100vh - #{$titleHeight} - #{$actionMenuHeight} - #{$mainnavHeight} - #{$mobileTabNavHeight * 2});
        }
      }
      &.card-no-buttons{
        .card-content-header {
          max-height: calc(100vh - #{$titleHeight} - #{$mainnavHeight} - #{$mobileTabNavHeight * 2});
        }
      }
    }
  }

  @media screen and (max-width: ($mobileWidth - $mobileStage*3)) {
    mat-card-actions > div{
      // when screen is small, all buttons should have the same size to prevent long texts to let short text to be too small
      width: 0;
      margin: 0;
      flex-grow: 1;
      justify-content: center;
      >button{
        width: calc(100% - 5px*2); // subtract the margin
      }
    }
  }
  @media all and (max-width: 50 + 700 + $jumpmarksWidth){
    .card-jumpmarks{
      margin-left: 0;
      .jumpmarks{
        display: none;
      }
    }
  }
}
